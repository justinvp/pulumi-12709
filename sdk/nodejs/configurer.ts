// *** WARNING: this file was generated by pulumi-gen-awsconf. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiAws from "@pulumi/aws";

export class Configurer extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'awsconf:index:Configurer';

    /**
     * Returns true if the given object is an instance of Configurer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Configurer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Configurer.__pulumiType;
    }

    public /*out*/ readonly awsProvider!: pulumi.Output<pulumiAws.Provider | undefined>;

    /**
     * Create a Configurer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConfigurerArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["awsProvider"] = undefined /*out*/;
        } else {
            resourceInputs["awsProvider"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Configurer.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }

    configureAwsProvider(): pulumi.Output<Configurer.ConfigureAwsProviderResult> {
        return pulumi.runtime.call("awsconf:index:Configurer/awsMethod", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Configurer resource.
 */
export interface ConfigurerArgs {
    profile?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export namespace Configurer {
    /**
     * The results of the Configurer.configureAwsProvider method.
     */
    export interface ConfigureAwsProviderResult {
        readonly awsProvider: pulumiAws.Provider;
    }

}
